/* _abilities.css */
/* Abilities Section */
.abilities-section {
    margin-top: 1.5rem;
}

.abilities-section h4 {
    margin-bottom: 1rem;
    color: #FFD700;
    border-bottom: 1px solid #444;
    padding-bottom: 0.5rem;
}

/* Individual ability container - provides spacing */
.ability-container {
    margin-bottom: 1.2rem; /* Keep this for spacing between ability cards */
}

/* IMPORTANT FIX: Remove margin-bottom from the last ability item to prevent blocking */
.ability-container:last-child {
    margin-bottom: 0;
}

/* The actual clickable ability card */
.ability-card {
    background: #1A1A1A;
    padding: 1.2rem 1.5rem;
    border-radius: 8px;
    border: 1px solid #3A3A3A;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    transition: transform 0.2s ease, border-color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer; /* Indicate it's clickable */
    position: relative; /* For absolute positioning of radio input */
}

.ability-card:hover {
    transform: translateY(-3px);
    border-color: #B22222;
    background-color: #252525; /* Slightly lighter dark on hover */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
}

.ability-card.selected {
    border: 2px solid #B22222; /* Red border for selected */
    background-color: #252525;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
}

/* Hide the radio button itself, as the card is the click target */
.ability-card input[type="radio"] {
    position: absolute; /* Take out of flow */
    opacity: 0; /* Make it invisible */
    pointer-events: none; /* Make it not clickable directly */
    width: 0;
    height: 0;
    margin: 0;
    padding: 0;
}

/* Ability header (name, type tag) */
.ability-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.8rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px dashed #3A3A3A;
}

/* Label for the ability name, allowing text selection */
.ability-header label {
    display: flex;
    align-items: center;
    flex-grow: 1; /* Allow label to take available space */
    cursor: pointer; /* Maintain cursor for accessibility */
}


.ability-name {
    font-size: 1.2rem;
    font-weight: bold;
    color: #FFD700;
}

.ability-types {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

/* Ability type tags */
.type-tag {
    background-color: #444;
    color: #eee;
    padding: 0.3rem 0.7rem;
    border-radius: 15px;
    font-size: 0.85rem;
    font-weight: 500;
    white-space: nowrap;
    display: flex;
    align-items: center;
    gap: 0.3rem;
}

.type-tag:has(.fa-star) {
    background-color: #28A745;
}

.type-tag:has(.fa-bolt) {
    background-color: #007BFF;
}

/* Ability description */
.ability-description {
    font-size: 0.95rem;
    line-height: 1.5;
    color: #ccc;
    margin-bottom: 1rem;
}

/* Tier Headers */
.tier-header {
    font-size: 1.3rem;
    color: #FFF;
    margin-top: 2rem;
    margin-bottom: 1.5rem;
    padding-left: 0.5rem;
    border-left: 4px solid #FFD700;
    background-color: #2A2A2A;
    padding: 0.7rem 1rem;
    border-radius: 4px;
}

/* Ability options (checkboxes) */
.ability-options {
    background-color: #252525;
    padding: 1rem;
    border-radius: 6px;
    border: 1px dashed #3A3A3A;
    margin-top: 1rem;
}

.ability-options p {
    font-weight: bold;
    margin-bottom: 0.8rem;
    color: #FFD700;
    font-size: 0.95rem;
}

.ability-option {
    display: flex;
    align-items: flex-start;
    margin-bottom: 0.8rem;
    cursor: pointer;
    font-size: 0.9rem;
    color: #E0E0E0;
}

.ability-option:last-child {
    margin-bottom: 0;
}

.ability-option input[type="checkbox"] {
    margin-right: 0.7rem;
    margin-top: 0.2rem;
    transform: scale(1.1);
    accent-color: #4CAF50;
}

/* Disabled option styling */
.ability-option input[type="checkbox"]:disabled + span {
    color: #777;
    cursor: not-allowed;
    opacity: 0.7;
}

.ability-option input[type="checkbox"]:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* Specific active ability button style (no longer needed for abilities, this was from previous attempts) */
/* .ability-button.toggled-red {
    background-color: #B22222;
    border-color: #FFD700;
} */

/* These are remnants from previous attempts to style buttons as abilities, remove if not used */
/* .ability-button.ability-item, .ability-button.toggled-red, .ability-button.toggled-red:hover {
    background-color: #1A1A1A;
    color: #E0E0E0;
    border: 1px solid #3A3A3A;
    border-radius: 8px;
    padding: 1.2rem 1.5rem;
    margin-bottom: 1.2rem;
    text-align: left;
    width: 100%;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    transition: transform 0.2s ease, border-color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer;
} */


/* Specific styles for ACTIVE ability type tag */
.ability-type-tag.active {
    background-color: #B22222; /* Red background */
    color: white;
    border-color: #FFD700; /* Gold border */
}

/* Specific styles for PASSIVE ability type tag */
.ability-type-tag.passive {
    background-color: #4CAF50; /* Green background */
    color: white;
    border-color: #FFD700; /* Gold border */
}

@media (max-width: 768px) {
    .ability-header {
        flex-direction: column;
        align-items: flex-start;
    }

    .ability-types {
        margin-top: 0.5rem;
    }
}