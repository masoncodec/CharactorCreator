/* _abilities.css */
/* Abilities Section */

/* Tier Headers */
.tier-header {
    font-size: 1.3rem;
    color: #FFF;
    margin-top: 2rem;
    margin-bottom: 1.5rem;
    padding-left: 0.5rem;
    border-left: 4px solid #FFD700;
    background-color: #2A2A2A;
    padding: 0.7rem 1rem;
    border-radius: 4px;
}

.abilities-section {
    margin-top: 1.5rem;
}

.abilities-section h4 {
    margin-bottom: 1rem;
    color: #FFD700; /* Keeping gold for section headers as per existing theme */
    border-bottom: 1px solid rgb(56, 56, 56); /* Updated to new default border */
    padding-bottom: 0.5rem;
}

/* NEW: Grid container for multiple ability cards per row */
.abilities-grid-container {
    display: grid;
    /* Updated: Use minmax(min-content, 1fr) to allow single column to fill width,
       or auto-fit instead of auto-fill for better single-column stretching when content is small. */
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    padding: 0.5rem 0;
}

.abilities-grid-container .ability-container {
    margin-bottom: 0;
}

/* The actual clickable ability card */
.ability-card {
    background: #252525; /* Updated to new background color */
    padding: 1.2rem 1.5rem;
    border-radius: 8px;
    border: 1px solid rgb(56, 56, 56); /* Updated to new default border */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    height: 100%;
    transition: all 0.2s ease-in-out;
}

.ability-card:hover:not(.selected) {
    border-color: #FFD700; /* Gold border on hover */
    background-color: #3A3A3A; /* Updated to secondary accent background */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}

.ability-card.selected {
    border-color: #FFD700; /* Updated to primary accent border */
    background-color: #B22222; /* Updated to primary accent background */
    box-shadow: 0 4px 15px rgba(178, 34, 34, 0.4); /* Shadow color based on primary accent */
}

.ability-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.8rem;
}

.ability-header label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: 1.1rem;
    font-weight: bold;
    color: #FFD700; /* Keeping gold for headers/labels */
}

/* REMOVED: No longer need radio option for the overall ability selection */
.ability-header input[type="radio"] {
    display: none; /* Hide the radio button for the overall ability selection */
}

.ability-name {
    flex-grow: 1;
}

.ability-types {
    display: flex;
    gap: 0.5rem;
}

.type-tag {
    background-color: #333; /* Keeping existing for type tags, adjust if needed */
    color: #E0E0E0;
    padding: 0.3em 0.6em;
    border-radius: 4px;
    font-size: 0.75rem;
    text-transform: uppercase;
    border: 1px solid #555; /* Keeping existing for type tags, adjust if needed */
}

.ability-description {
    font-size: 0.9rem;
    color: #E0E0E0; /* Updated to main text color */
    margin-bottom: 1rem;
}

.ability-options {
    margin-top: 1rem;
    padding: 1.2rem 1.5rem; /* Adjusted for more space */
    border-top: 1px solid rgb(56, 56, 56); /* Updated to new default border */
}

.ability-card.selected .ability-options {
    background-color: #252525; /* Darker red for cohesion */
    border-top: 1px solid #FFD700; /* Darker red border */
    border-right: 1px solid #FFD700; /* Darker red border */
    border-bottom: 1px solid #FFD700; /* Darker red border */
    border-left: 1px solid #FFD700; /* Darker red border */
}

.ability-options p {
    font-size: 0.95rem;
    color: #FFD700; /* Keeping gold for option titles */
    margin-bottom: 0.8rem;
    font-weight: bold;
}

/* Styles for individual ability options (labels wrapping inputs and text) */
.ability-option {
    display: flex;
    align-items: flex-start;
    margin-bottom: 0.8rem;
    cursor: pointer;
    font-size: 0.9rem;
    color: #E0E0E0; /* Updated to main text color */
}

.ability-option:last-child {
    margin-bottom: 0;
}

/* Base styles for both checkbox and radio inputs */
.ability-option input[type="checkbox"],
.ability-option input[type="radio"] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    
    display: inline-block;
    width: 1.1em;
    height: 1.1em;
    margin-right: 0.7rem; 
    margin-top: 0.2rem;   
    flex-shrink: 0;
    
    border: 2px solid rgb(56, 56, 56); /* Updated to new default border */
    background-color: #252525; /* Updated to new background color */
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease-in-out;
}

/* Checkbox specific styles for the outer shape */
.ability-option input[type="checkbox"] {
    border-radius: 4px;
}

/* Radio button specific styles for the outer shape */
.ability-option input[type="radio"] {
    border-radius: 50%;
}

/* Custom indicator when checked - for checkboxes (the checkmark) */
.ability-option input[type="checkbox"]:checked::before {
    content: '\2713';
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1em;
    line-height: 1;
    color: #FFD700; /* Changed to gold */
}

/* Custom indicator when checked - for radio buttons (the inner dot) */
.ability-option input[type="radio"]:checked::after {
    content: '';
    display: block;
    width: 0.5em;
    height: 0.5em;
    border-radius: 50%;
    background-color: #FFD700; /* Changed to gold */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Disabled state for both inputs */
.ability-option input[type="checkbox"]:disabled,
.ability-option input[type="radio"]:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    border-color: #FFD700; /* Keeping existing disabled border color */
    background-color: #B22222; /* Keeping existing disabled background color */
}

/* Disabled text for the label's content (span) */
.ability-option input[type="checkbox"]:disabled + span,
.ability-option input[type="radio"]:disabled + span {
    color: #777; /* Keeping existing disabled text color */
    cursor: not-allowed;
    opacity: 0.7;
}

/* Hover effect on the custom input visual */
.ability-option input[type="checkbox"]:hover:not(:disabled),
.ability-option input[type="radio"]:hover:not(:disabled) {
    border-color: #FFD700; /* Gold border on hover */
    box-shadow: 0 0 5px rgba(255, 215, 0, 0.5); /* Subtle gold glow */
}

/* Specific styles for ACTIVE ability type tag */
.type-tag.active {
    background-color: #B22222; /* Red background, matching primary accent */
    color: white;
    border-color: #FFD700; /* Gold border */
}

/* Specific styles for PASSIVE ability type tag */
.type-tag.passive {
    background-color: #4CAF50; /* Keeping green background as no specific passive color was given */
    color: white;
    border-color: #FFD700; /* Gold border */
}

@media (max-width: 768px) {
    .abilities-grid-container {
        grid-template-columns: 1fr; /* Ensures a single column fills the width on small screens */
    }
}